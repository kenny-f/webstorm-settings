<templateSet group="user">
  <template name="req" value="var $var$ = require('$module$');" description="node require module" toReformat="true" toShortenFQNames="true">
    <variable name="var" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="module" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="modexparr" value="module.exports = [$var$];" description="export module" toReformat="true" toShortenFQNames="true">
    <variable name="var" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="hapiget" value="var get$what$ = {&#10;  method: 'GET',&#10;  path: '/$path$',&#10;  handler: $handler$Handler,&#10;};" description="hapi get route" toReformat="true" toShortenFQNames="true">
    <variable name="what" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="path" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="handler" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="modexp" value="module.exports = $END$" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="obj" value="var $NAME$ = {&#10;  $END$&#10;};" toReformat="true" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="des" value="describe('$what$', () =&gt; {&#10;  $END$&#10;});" toReformat="true" toShortenFQNames="true">
    <variable name="what" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="it" value="it('$what$', () =&gt; {&#10;      $END$&#10;    });" toReformat="true" toShortenFQNames="true">
    <variable name="what" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ae" value="afterEach(function(done) {&#10;    $END$&#10;    done();&#10;  });" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="be" value="beforeEach(function(done) {&#10;    $END$&#10;    done();&#10;  });" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="jstr" value="JSON.stringify($end$)" toReformat="true" toShortenFQNames="true">
    <variable name="end" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_EXPRESSION" value="true" />
      <option name="JSX_HTML" value="true" />
    </context>
  </template>
  <template name="clog" value="console.log($end$);" toReformat="true" toShortenFQNames="true">
    <variable name="end" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="exact" value="export const $const$ = '$const$';" toReformat="true" toShortenFQNames="true">
    <variable name="const" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="imp" value="import $what$ from '$where$';" toReformat="true" toShortenFQNames="true">
    <variable name="what" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="where" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="rcomp" value="import React, { Component, PropTypes } from 'react';&#10;&#10;class $comp$ extends Component {&#10;  render() {&#10;    return (&#10;      $END$&#10;    );&#10;  }&#10;}&#10;&#10;$comp$.propTypes = {&#10;&#10;};&#10;&#10;export default $comp$;" toReformat="true" toShortenFQNames="true">
    <variable name="comp" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="test" value="test('$testcase$', assert =&gt; {&#10;  $END$&#10;  assert.end();&#10;});" toReformat="true" toShortenFQNames="true">
    <variable name="testcase" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ade" value="assert.deepEqual(actual, expected, '$END$');" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="arr" value="() =&gt; { $END$ }" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_EXPRESSION" value="true" />
      <option name="JSX_HTML" value="true" />
    </context>
  </template>
  <template name="clogjson" value="console.log(JSON.stringify($END$, null, 2));" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="if" value="if ($COND$) {&#10;    $END$&#10;  }" toReformat="true" toShortenFQNames="true">
    <variable name="COND" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="gqlstr" value="GraphQLString" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_EXPRESSION" value="true" />
    </context>
  </template>
  <template name="gqlobj" value="GraphQLObjectType({&#10;    $END$&#10;})" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JS_EXPRESSION" value="true" />
    </context>
  </template>
  <template name="gqllist" value="GraphQLList" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="false" />
      <option name="JSX_HTML" value="false" />
      <option name="JS_STATEMENT" value="false" />
    </context>
  </template>
</templateSet>